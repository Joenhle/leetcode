class Solution:
    def findMedianSortedArrays(self, nums1, nums2):
        def find_k(arr1, arr2, k):
            n, m = len(arr1), len(arr2)
            if n == 0:
                return arr2[k-1]
            if m == 0:
                return arr1[k-1]
            if k == 1:
                return min(arr1[0], arr2[0])
            a, b = max(0, min(k // 2 - 1, n-1)), max(0, min(k // 2 - 1, m-1))
            if arr1[a] <= arr2[b]:
                return find_k(arr1[a+1:], arr2, k-a-1)
            else:
                return find_k(arr1, arr2[b+1:], k-b-1)
        
        n, m = len(nums1), len(nums2)
        if (n + m) % 2 == 1:
            return find_k(nums1, nums2, (n+m+1)//2)
        else:
            return (find_k(nums1, nums2, (n+m)//2) + find_k(nums1, nums2, (n+m)//2+1)) / 2
        

if __name__ == "__main__":
    s = Solution()
    print(s.findMedianSortedArrays([1,2], [3,4]))
